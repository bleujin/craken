<!DOCTYPE html>
<html manifest="cache.appcache">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge;chrome=1" />
    <title>OKJSP Craken Presentation</title>
    <link href="http://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono" rel="stylesheet" type="text/css" />
    <link id="prettify-link" href="src/prettify/prettify.css" rel="stylesheet" disabled />
    <link href="css/moon.css" class="theme" rel="stylesheet" />
    <link href="css/sand.css" class="theme" rel="stylesheet" />
    <link href="css/sea_wave.css" class="theme" rel="stylesheet" />
    <link href="css/default.css" class="theme" rel="stylesheet" media="screen"  />
    <link href="css/common.css" rel="stylesheet" media="screen" />
  </head>
  <body>
    <nav id="helpers">
      <button title="Previous slide" id="nav-prev" class="nav-prev">⇽</button> 
      <button title="Jump to a random slide" id="slide-no">5</button> 
      <button title="Next slide" id="nav-next" class="nav-next">⇾</button>
      <menu>
        <button type="checkbox" data-command="toc" title="Table of Contents" class="toc">TOC</button>
        <!-- <button type="checkbox" data-command="resources" title="View Related Resources">☆</button> -->
        <button type="checkbox" data-command="notes" title="View Slide Notes">✏</button>
        <button type="checkbox" data-command="source" title="View slide source">↻</button>
        <button type="checkbox" data-command="help" title="View Help">?</button>
      </menu>
    </nav>
    <div class="presentation">
      <div id="presentation-counter">Loading...</div>
      <div class="slides">
        <div class="slide" id="landing-slide">
          <style>
            #landing-slide p {
              font-size: 35px;
            }
            p#disclaimer-message {
              font-size: 20px;
            }
          </style>
          <section class="middle">
            <p>This presentation is an HTML5 website</p>
            <p>Press <span id="left-init-key" class="key">&rarr;</span> key to advance.</p>
            <p id="disclaimer-message">Having issues seeing the presentation? Read the <a href="disclaimer.html">disclaimer</a></p>
          </section>
          <aside class="note">
            <section>
              Welcome! (This field is for presenter notes and commentary.)
            </section>
          </aside> 
        </div>

        <div class="slide" id="controls-slide">
          <header>Slides controls</header>
          <style>
            #controls-slide li, #controls-slide p {
              font-size: 32px;
            }
            #controls-slide .key {
              bottom: 2px;
            }
          </style>
          <section>
            <ul>
              <li><span class="key">&larr;</span> and <span class="key">&rarr;</span> to move around.</li>
              <li><span class="key">Ctrl/Command</span> and <span class="key">+</span> or <span class="key">-</span> to zoom in and out if slides don’t fit.</li>
              <li><span class="key">S</span> to view page source.</li>
              <li><span class="key">T</span> to change the theme.</li>
              <li><span class="key">H</span> to toggle syntax highlight.</li>
              <li><span class="key">N</span> to toggle speaker notes.</li>
              <li><span class="key">3</span> to toggle 3D effect.</li>
              <li><span class="key">0</span> to toggle help.</li>
            </ul>
          </section>
        </div>

		<div class="slide" id="whoami">
			<header>Whoami</header>
          <style>
            #whoami pre {
              font-size: 22px;
              top : 20px
            }
          </style>
			<section>
				<h2>I am..</h2>
				<pre>blog : http://bleujin.tistory.com/
company : i-on communications, platform service team
role : 표준 프레임워크 커미터(since 2011)</pre>
				
				<h2>Working</h2>
				<pre> - https://github.com/bleujin/aradon(분산 미들웨어)
 - https://github.com/bleujin/craken(분산 레파지토리)
 - https://github.com/bleujin/aradonClient(websocket client)
 - etc) isearcher, ionframework
</pre>				
			</section>
		</div>


        <div class="slide" id="pretitle-slide">
          <style>
            #pretitle-slide h1, #pretitle-slide h2 {
              color: black;
            }
            #pretitle-slide h1 {
              letter-spacing: -2px;
              font-size: 96px;
            }
            #pretitle-slide h2 {
              margin-top: -5px;
              font-size: 40px;
              letter-spacing: -1px;
            }
          </style>
          
          <section class="middle">
          	<hgroup>
              <h1>
                Repository*
              </h1>
              <h2>
                One Size Fits All ?
              </h2>
            </hgroup>
            <img src="img/repo.jpg" width="600" height="337" />
          </section>
		</div>


        <div class="slide styling" id="repository-aspect">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><h1>Database를 바라보는 관점</h1></header>
          <section>
          	 
			<h2 class="sheader">PM</h2>
<pre>오라클은 너무 비싼데.
여기에 이런 필드 하나만 더 넣어주세요.
개발자는 머만 바꾸자 맨날 어렵데.</pre>			

             <h2 class="sheader">Developer</h2>
<pre>빌어먹을 DB - 테이블이 왜 이렇게 많아?
오라클에서는 이렇게 했는데 MySQL에서는 어떻게 하지?
고작해야 값 넣고 빼는 건데 왜 이렇게 복잡? 그냥 파일에 저장할까?
Data는 여기에 저장하고 UploadFile은 저기에 저장하고... 머 서치엔진?
DBA는 머만 바꾸자 하면 맨날 어렵데.
</pre>

             <h2 class="sheader">DBA</h2>
             <pre>멋지게 정규화 시켰는데 왜 불편하다고 할까
DB 아키텍쳐 이해와 옵티마이저의 룰만 알면 됩니다. 
Query를 잘 하려면 집합적인 사고방식을 가지면 됩니다. 참 쉽죠.(by Bob Uncle)
</pre>
          </section>
        </div>


		<div class="slide styling" id="diff-paradiem">
			<style>
          	.sheader {
          		margin-top : 30px ;
          	}
        	</style>
			<header><h1>패러다임의 차이</h1></header>		
			<section>
				<h2 class="sheader">미션(2002.10)</h2>
				<pre>매일매일의 접속자 수를 알기위해 매일 첫번째의 사용자는
   insert into 카운터테이블(일자 , 명수) values(@오늘일자,  1)
그리고 2명째부터는
   update 카운터테이블 set 명수 = 명수 + 1 where 일자 = @오늘일자 
를 하여 일자별 접속자수를 테이블에 저장하여야 한다.</pre>				

				<h2 class="sheader">금붕어 해결책</h2>
				<pre>select count(*) as @cnt from 카운터테이블 where 일자 = @오늘일자

if (@cnt > 0)
   update 카운터테이블 set 명수 = 명수 + 1 where 일자 = @오늘일자
else
   insert into 카운터테이블(일자 , 명수) values(@오늘일자,  1)</pre>				

			</section>
		</div>
		
		<div class="slide styling" id="diff-paradiem2">
			<style>
          	.sheader {
          		margin-top : 30px ;
          	}
        	</style>
			<header><h1>패러다임의 차이</h1></header>		
			<section>
				<h2 class="sheader">고양이 해결책</h2>
				<pre>if ( Exists(select top 1 "있음"  from 카운터테이블 where 일자 = @오늘일자) )
   update 카운터테이블 set 명수 = 명수 + 1 where 일자 = @오늘일자
else
   insert into 카운터테이블(일자 , 명수) values(@오늘일자,  1)</pre>				


				<h2 class="sheader">사람의 해결책</h2>
				<pre>update 카운터테이블 set 명수 = 명수+ 1 where 일자 = @오늘일자

if (@@ROWCOUNT == 0)
　 insert into 카운터테이블 (일자,명수) values(@오늘일자, 1)</pre>				

			</section>
		</div>
		

		<div class="slide styling" id="find-solution">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><h1>변화의 탐색 - XX가 최고시다.</h1></header>
          <section>
          	 
			<h2 class="sheader">OODBMS</h2>
			<pre>캡슐화, 상속, 다형성 등 프로그래밍에 도움을 주는 특성의 보유
종류 : Objectivity, O2, Gemstone</pre>			

            <h2 class="sheader">ORDBMS</h2>
			<pre>RDBMS의 확장 모델
RDB의 문제점들인 반복그룹, 포인터, 자료형의 한계를 완화
종류 : Unisql(큐브리드), RDB의 확장 모델, XML DB
</pre>

			<h2 class="sheader">New Framework</h2>
			<pre>상세하고 번거로운 JDBC API를 프로그래밍 관점에서 추상화 & 간결화
종류 : JDBC Helper library, iBatis, ionFramework
</pre>

			<h2 class="sheader">OR Adapter</h2>
			<pre>CRUD 빨리 만들기  - 관공서 or SI 프로젝트에서 많이 사용
종류 : Hibernate, JPA
</pre>
          </section>
          
	      <aside class="note">
	      	<section>PS가 좋냐, XBox가 좋냐의 싸움.
	      	남이 추상화 단계를 높여서 만든 프레임워크를 사용하는 건 생각의 속도로 코딩을 하는걸 지연시키고, 코딩도 즐겁지 않습니다.</section>
	      </aside> 
       </div>


		<div class="slide styling" id="env-change">
        <header><h1>환경의 변화</h1></header>
          
        <section>

			<h2 class="sheader">통제된 데이타에서 통제되지 않은 데이타 환경으로</h2>
			<pre>미리 설계되지 않은 데이타와의 통신/호환(no man is an island) 
</pre>			

			<h2 class="sheader">중앙집중형 DB에서 감당할 수 없는 BIG Data</h2>
			<pre>전세계 해변에 있는 모래알의 수가 많을까, 올 한해 생성된 디지털 데이터의 양이 많을까
모래알의 수 - 7 * (10^18 ~ 10^20)
테라(10^12), 페타(10^15), 엑사(10^18), 제타(10^21)</pre>


            <h2 class="sheader">HTML5, OpenSource의 활성화</h2>
            <pre>DB는 더이상 BlackBox가 아님
HTML5를 이용해 이전의 Dummy Client이상의 기능을 할 수 있음            
</pre>

        </section>
          
		<aside class="note">
		<section>
			RDBM를 사용할 때 공유하고 싶은 데이터 엔티티(Entity)를 정의하고 엔티티의 항목과 관계등을 정의하는 설계과정이 필수적이었으며 데이터는 설계자에 의해 미리 정규화된 데이터였고 데이터 생산-처리는 통제된 환경에서 다루어졌다. 
			이제는 통제되지 않는 환경에서 생산된 데이터가 먼저 존재한다. 
			로그 데이터나 사용자 컴퓨터에 파일로 존재한 비정형 데이터(Semi-Structured Data)처럼 통제되지 않은 Data를 다루어야 하며 
			이런 데이터들은 설계자의 예측보다 훨씬 더 자주 변한다. 
			
			중앙 집중형인 RDBMS가 관리할 수 있는 데이터의 양보다 훨씬 더 많아졌고 데이터의 종류도 이전의 varchar, number뿐 아니라 blob과 index 데이터 같은 이진데이타도 repository가 관리해야 할 중요한 데이터가 되었다. 
		
		    http://hallet.tistory.com/659
	      	EMC가 조사기관인 IDC에 의뢰해서 "디지털 유니버스 보고서 : 빅데이터, 더욱 길어진 디지털 그림자, 이머징 마켓의 놀라운 성장" 이라는 보고서를 만들었는데
	      	2012년 만들어진 전 세계 데이타의 양은 2.8Zeta이며 그중 유용한 가치를 창출한 것으로 판단된 데이타의 양은 23%이며, 3%만이 분류되고 0.5%만이 분석되어 있다고 합니다. 
		</section>
		</aside>
        </div>

		
		
		<div class="slide styling" id="env-change2">
		  <style>	
			.matrix {
              vertical-align: middle;
              margin-left: 120px;
            }
          </style>
		<header><h1>환경의 변화</h1></header>
		      
		<section>

            <h2 class="sheader">반복적인 노드의 탐색, 연관정보 탐색</h2>
            <img src="img/matrix.png" class="matrix">
            <pre>session.tranSync(new TransactionJob&lt;Void&gt;(){
  public Void handle(WriteSession wsession){
    wsession.pathBy("/matrix/anderson").refTo("KNOWS", "/matrix/trinity").property("age", 29).property("name", "Tomas Anderson") ;
    wsession.pathBy("/matrix/trinity").property("name", "Trinity") ;
    return null ;	
  }
}) ;
String name = session.pathBy("/matrix").children().eq("age", 29).findOne()
    .ref("KNOW").property("name").stringValue() ;
assertEquals("Trinity", name) ;</pre>

		</section>
		
		<aside class="note">
			<seciton>현재의 서비스가 중요시하는 소셜 기능, 추천 기능, 네트워크 분석 기능의 구현에  있어서 반복적인 노드의 탐색, 연속적으로 꼬리를 무는 연관정보 탐색 기능이 필요하지만 이전의 RDB Repository로는 여러 가지 어려움이 있다.</seciton>
		</aside>
		</div>
		
		
		<div class="slide styling" id="find-solution2">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><h1>변화의 탐색 V2</h1></header>
          <section>
          	 
			<h2 class="sheader">이전 고민의 주제</h2>
			<pre>Oracle을 쓸까 MSSql 혹은 MySQL을 쓸까
DBFramework는 iBatis를 쓸까? Hibernate를 쓸까? 라고 고민
- 결국 RDBMS BASE 였음.</pre>			

            <h2 class="sheader">새로운 옵션 - No one repository fits all</h2>
			<pre><em>BigData</em> : Hadoop + Hbase, Redis, Cassandra - Potal, Mobile
<em>NoSQL</em> : mongoDB, neo4j 			
<em>Daas</em> : https://baas.io/ 
       http://gaia.i-on.net 
       http://doc.fluidinfo.com/fluidDB/
<em>Pass</em> : RDS or DynamoDB on AWS, Google Play</pre>

          <img src="img/asaservice.png" width="425" height="190" align="right">

          </section>

       </div>

		<div class="slide styling" id="newsql">
 			<header><h1>변화의 탐색 V2</h1></header>
			<section>
				<h2 class="sheader">NoSQL or NewSQL</h2>
				from http://nextbigfuture.com/2011/04/nosql-newsql-highly-scalable-databases.html
				<br/><br/>
				<img src="img/nosqlnewsql.jpg" width="800" /><br clear="all"/>
						
			</section>
		</div>


		<div class="slide styling" id="daas">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><h1>DAAS(Repository As A Service)</h1></header>
          <section>
          	 
			<h2 class="sheader">DAAS</h2>
			from http://www.infoq.com/news/2008/02/Database-as-a-Service<br/>
			<img src="img/daas.gif" width="820" height="300" />			

            <h2 class="sheader">고려해야 할 점</h2>
			<pre><em>Remote Call</em>의 비용
<em> - 프로토콜</em> : REST or WebSocket
<em> - 추상화 정도</em> : Fine grained or Coarsed grained
<em>Return</em> : json or xml or stream
<em>트랜잭션</em> 지원
</pre>
          </section>
          
	      <aside class="note">
	      	<section> one size Hat fits all</section>
	      </aside> 
       </div>





        <div class="slide" id="title-slide">
        <style>
            #title-slide h1, #title-slide h2 {
              color: black;
            }
            #title-slide h1 {
              letter-spacing: -2px;
              font-size: 96px;
            }
            #title-slide h2 {
              margin-top: -5px;
              font-size: 40px;
              letter-spacing: -1px;
            }
        </style>
          
        <section class="middle">
            <hgroup>
              <h1>
                CRAKEN*
              </h1>
              <h2>
                Easy Repository For Dev
              </h2>
            </hgroup>
            <img src="img/craken.jpg" />
          </section>
        </div>


	

		




        <div class="slide" id="timeline-slide">
          <header>Rough Explain</header>
          <section>
            
              <h2>HOME : </h2><pre>http://github.com/bleujin/craken</pre>
              <h2>DO / SIMILARY : </h2><pre>Embed Repository / RDB, hadoop, nutch, memcache</pre>
              <h2>SUPER : </h2><pre>infinispan, netty, isearcher</pre>
              <h2>SIZE / SINCE: </h2><pre>about 300 class - 1.0M / since 2012 (current 0.4)</pre>
          </section>
        </div>


        <div class="slide" id="formula-intro-slide">
          <section class="middle formula" data-build>
            <style>
             #char {
                margin-top: 25px;
                font-size: 35px;
             }
            </style>
            CRAKEN ~=
            <span class="html">Data</span>
            +
            <span class="css">Index</span>
            +
            <span class="js">BLOB</span>
            
          </section>
        </div>
        

		<div class="slide" id="table-of-contents">
		<header><h1>Today, Agenda...</h1></header>
		  <style>
            #toc-list > li {
              font-size: 26px;
              line-height: 33px;
              opacity: 0.85;
            }
            #toc-list > li:hover {
              opacity: 1;
            }
            #toc-list a {
              border-bottom: 0;
            }
            #toc-list a:hover{
              border-bottom: 2px solid #3f3f3f;
            }
            #toc-list img {
              vertical-align: middle;
              margin-left: 15px;
            }
		  </style>
		  <section>
			<ul id="toc-list">
			</ul>
		  </section>
		</div>


        <div class="slide transitionSlide" id="semantics-markup-title">
          <section class="middle">
            <h2>Imaging</h2>
            <p>만약 이런 서비스를 만든다면..</p>
            <img src="src/HTML5_Semantics_64.png" title="Imaging" alt="Imaging">
          </section>
        </div>

        <div class="slide semantics" id="imaging-example-1">
          <header><span class="html">IMAGING</span> <h1>Case 1</h1></header>
          <section>
            <pre>Mobile Game</pre>
		    <div class="case-example example">
		    	<img src="img/case2.jpg">
		    </div>
          </section>
        </div>

        <div class="slide semantics" id="imaging-example-2">
          <header><span class="html">IMAGING</span> <h1>Case 2</h1></header>
          <section>
            <pre>Weather Service</pre>
		    <div class="case-example example">
		    	<img src="img/case3.jpg">
		    </div>
          </section>
        </div>

        <div class="slide semantics" id="imaging-example-3">
          <header><span class="html">IMAGING</span> <h1>Case 3</h1></header>
          <section>
            <pre>Global CRM Service</pre>
		    <div class="case-example example">
		    	<img src="img/case4.jpg">
		    </div>
          </section>
        </div>





        <div class="slide transitionSlide" id="css3-title">
          <section class="middle">
            <h2>WHY</h2>
            <p>Good! 이제 만들어 봅시다.</p>
            <img src="src/HTML5_Styling_32.png" title="ElephantThinking" alt="ElephantThinking">
          </section>
        </div>

       

        <div class="slide styling" id="why-case1">

          <header><span class="css">WHY</span> <h1>처음에는...</h1></header>
          <section>
          	<pre><em>흠. 좋아요 심플한 아키텍쳐군요.</em></pre>          	
        	<div class="why-customer"><img src="img/cat-com.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why1.png"  width="400" height="400" /></div>
          </section>
        </div>
        
        <div class="slide styling" id="why-case2">
          <header><span class="css">WHY</span> <h1>+Blob</h1></header>
          <section>
          	<pre><em>상품 이미지같은 BLOB도 관리했으면 해요.</em>
.... 그런 것 쯤이야 금방이죠</pre>          	
        	<div class="why-customer"><img src="img/cat-com.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why2.png"  width="400" height="400" /></div>
          </section>
        </div>

        <div class="slide styling" id="why-case3">
          <header><span class="css">WHY</span> <h1>+Index</h1></header>
          <section>
          	<pre><em>전문 검색이 필요해요.</em>
.... Lucene을 사용할 기회가 되겠군요(선이 조금 복잡해졌군요)</pre>          	
        	<div class="why-customer"><img src="img/cat-com.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why3.png"  width="400" height="400" /></div>
          </section>
        </div>

        <div class="slide styling" id="why-case4">
          <header><span class="css">WHY</span> <h1>+분산</h1></header>
          <section>
          	<pre><em>사용자가 너무 많아서 분산이 필요해요</em>
.... 톰캣에는 클러스터링이란게 .. 어?</pre>          	
        	<div class="why-customer"><img src="img/cat-com.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why4.png"  width="500" height="400" /></div>
          </section>
        </div>

        <div class="slide styling" id="why-case5">
          <header><span class="css">WHY</span> <h1>+분산</h1></header>
          <section>
          	<pre>좋아요. 최근 유행하는 OpenSource 기술을 사용하죠.
일단 컴퓨터가 톰캣 3대에 Hadoop은 MasterNode와 DataNode를 포함해서 기본 5대에
Sharding하는 MongoDB를 설치해야 하는데 Mongos와 ConfigSrv와 Sharding을 고려하면...
.... 여기에 Nutch는... 
<em>자.. 잠깐만요. 구현은 그렇다 치더라도 이거 누가 관리하죠?</em>
</pre>          	
        	<div class="why-customer"><img src="img/cat-com.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why5.png"  width="500" height="380" /></div>
          </section>
        </div>

        <div class="slide styling" id="why-case6">
          <header><span class="css">WHY</span> <h1>그들이 진정 원했던 것은</h1></header>
          <section>
        	<div class="why-customer">
        		<img src="img/want_1.jpg" style="padding: 5px"/>
        		<img src="img/want_2.jpg" style="padding: 5px"/>
        		<img src="img/want_3.jpg" style="padding: 5px"/>
        	</div>
        	<div style="list-style: none;  float: right; padding: 10px">
        		<img src="img/want_4.jpg" style="padding: 5px"/>
        		<img src="img/want_5.jpg" style="padding: 5px"/>
        		<img src="img/want_6.jpg" style="padding: 5px"/>
        	</div>
          </section>
        </div>

		<div class="slide styling" id="why-case7">
          <header><span class="css">WHY</span> <h1>Think, Think, Think</h1></header>
          <section class="middle">
			<img src="img/elephant.jpg" /><br clear="all" />
            	우리는 구글이나 애플이 아니에요.
		  </section>
        </div>
        
        <div class="slide styling" id="why-case8">
          <header><span class="css">WHY</span> <h1>그럴싸한데?</h1></header>
          <section>
          	<pre><em>저희 입장에서는 RDB에 저장된 것만이 아니라 Blob이나 Index도 관리 해야 할 데이타에요</em>
그렇지만 수십대의 분산이 필요하지도 않고 관리할 인력도 없죠. 	</pre>          	
        	<div class="why-customer"><img src="img/cat.jpg" width="250" height="200" /></div>
        	<div class="why-architecture"><img src="img/why7.png"  width="500" height="380" /></div>
          </section>
        </div>









        <div class="slide transitionSlide" id="craken-feature-title">
          <section class="middle">
            <h2>Craken Feature</h2>
            <p>&nbsp;</p>
            <img src="src/HTML5_Device_Access_64.png" title="Craken Feature" alt="Craken Feature">
          </section>
        </div>



        <div class="slide styling" id="craken-feature">
          <style>
          </style>
          <header><span class="js">Craken Feature</span> <h1>특징</h1></header>
          <section>
             <ul class="bullets">
            	<li>TreeDocument Data + Blob + Index</li>
            	<li>Embeding</li>
            	<li>Distribute(DIST + REPL)</li>
            	<li>Cache(Memory Grid)</li>
            	<li>Event Notification</li>
            </ul>
          </section>
        </div>

        <div class="slide styling" id="craken-architecture">
          <style>
          	.arch {
          		top-margin : 30px ;
          		padding : 30px ;
          	}
          </style>
          <header><span class="js">Craken Feature</span> <h1>Architecture</h1></header>
          <section>
             <div class="center arch"><img src="img/arch.png" class="arch" width="600" height="400"></div>
          </section>
        </div>

        <div class="slide styling" id="craken-cando">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><span class="js">Craken Feature</span> <h1>Can do it</h1></header>
          <section>
          	 
             <h2 class="sheader">자쿠와는 다르다! 자쿠와는!</h2>
             <pre><em>RDB</em> Schema-Free(TreeDocument Model)
<em>Hadoop</em> Share Data
<em>InMemory DB(H2,HSQL)</em> Distribute
<em>MongoDB</em> Embedable
</pre>

             <h2 class="sheader">할 수 있는 것</h2>
<pre>Share Distributed Data(ex:HttpSession)
Composite Data Repository
Data Analytics Based MapReduce(expect)
</pre>

			<h2 class="sheader">극복해야할 과제</h2>
<pre>낯설다.
아직 느리다.(1200 ups, expect : 3000 ups)
Not BigData(required Shard, 분산 쿼리)</pre>			
          </section>
        </div>




        <div class="slide transitionSlide" id="howitwork-markup-title">
          <section class="middle">
            <h2>How It Work</h2>
            <p>&nbsp;</p>
            <img src="src/HTML5_Offline_Storage_32.png" title="Demo" alt="Demo">
          </section>
        </div>


		<div class="slide styling" id="how-it-work1">
		<section>
			<h2 class="sheader">- 멤버 등록 과정</h2>
			<img src="img/howitwork1.png" width="100%" height="530" >
		</section>	
		</div>

		<div class="slide styling" id="how-it-work2">
		<section>
			<h2 class="sheader">- 트랜잭션 로그 공유</h2>
			<img src="img/howitwork2.png" width="100%" height="530" >
		</section>	
		</div>

		<div class="slide styling" id="how-it-work3">
		<section>
			<h2 class="sheader">- 커밋 이벤트 전송</h2>
			<img src="img/howitwork3.png" width="100%" height="530" >
		</section>	
		</div>

		<div class="slide styling" id="how-it-work4">
		<section>
			<h2 class="sheader">- 데이타 인덱스 & 저장</h2>
			<img src="img/howitwork4.png" width="100%" height="530" >
		</section>	
		</div>

		<div class="slide styling" id="how-it-work5">
		<section>
			<h2 class="sheader">- 데이타 읽기</h2>
			<img src="img/howitwork5.png" width="100%" height="530" >
		</section>	
		</div>

		<div class="slide styling" id="how-it-work6">
		<section>
			<h2 class="sheader">- 외부에서 읽기</h2>
			<img src="img/howitwork6.png" width="100%" height="530" >
		</section>	
		</div>




        <div class="slide transitionSlide" id="getting-started-title">
          <section class="middle">
            <h2>Getting Started</h2>
            <p>Example HelloWorld Source</p>
            <img src="src/HTML5_3D_Effects_64.png" title="Getting Started" alt="Getting Started">
          </section>
        </div>

		<div class="slide styling" id="gs-example1">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><span class="js">Getting Started</span> <h1>Hello World</h1></header>
          <section>
          	 
             <h2 class="sheader">Hello World</h2>
             <pre>public void testHello() throws Exception {
    <em>RepositoryImpl r = RepositoryImpl.inmemoryCreateWithTest() ;</em>
    r.start() ;
    <em>ReadSession session = r.login("test") ;</em>
        
    session.tranSync(<em>new TransactionJob&lt;Void&gt;</em>() {
        public <em>Void</em> handle(WriteSession wsession) {
            wsession.pathBy("/hello").property("greeting", "Hello World")
              .property("lang", "en");
            return null;
        }
    }) ;
    
    ReadNode node = session.pathBy("/hello") ;
    assertEquals("Hello World", node.property("greeting").stringValue()) ;
    assertEquals("en", node.property("lang").stringValue()) ;
    <em>r.shutdown() ;</em>
}</pre>			
          </section>
        </div>


		<div class="slide styling" id="gs-example2">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><span class="js">Getting Started</span> <h1>Tree Doc Model</h1></header>
          <section>
          	 
             <h2 class="sheader">Create Emp</h2>
             <pre>session.tranSync(new TransactionJob&lt;Void&gt;(){
    @Override
    public Void handle(WriteSession wsession) throws Exception {
        <em>wsession.pathBy("/emps/bleujin")</em>.property("name", "bleujin")
        	.property("age", 20) ;
        <em>wsession.pathBy("/emps/hero")</em>.property("name", "hero")
        	.property("age", 21)
        	.addChild("address").property("city", "seoul") ;
        return null;
    }
}) ;

<em>ResultSet rs</em> = session.pathBy("/emps")
    .children().gte("age", 10).<em>toAdRows("name, age, address.city cname")</em> ;
((Rows)rs).debugPrint() ;
}</pre>		

			<h2 class="sheader">Output</h2>
			<pre>{"age":21,"name":"hero","cname":"seoul"}
{"age":20,"name":"bleujin","cname":null}
</pre>
          </section>
        </div>
        
        

		<div class="slide styling" id="gs-example3">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><span class="js">Getting Started</span> <h1>Blob</h1></header>
          <section>
          	 
             <h2 class="sheader">Blob IO</h2>
             <pre>public void testIO() throws Exception {
    final InputStream src = new ByteArrayInputStream("LongLongString".getBytes("UTF-8"));
    
    session.tranSync(new TransactionJob&lt;Void&gt;() {
        public Void handle(WriteSession wsession) throws UnsupportedEncodingException {
            wsession.pathBy("/greet").property("greeting", "Hello World")
                <em>.blob("file", src)</em>;
            return null;
        }
    }) ;
    
    final InputStream readed = session.pathBy("/greet").property("file")
        <em>.asBlob().toInputStream()</em>;
    assertEquals("LongLongString", IOUtil.toStringWithClose(readed)) ;
}</pre>		

          </section>
        </div>

		<div class="slide styling" id="gs-example4">
          <style>
          	.sheader {
          		margin-top : 30px ;
          	}
          </style>
          <header><span class="js">Getting Started</span> <h1>Index</h1></header>
          <section>
          	 
             <h2 class="sheader">Auto Indexing</h2>
             <pre>public void testQuery() throws Exception {
    session.tranSync(new TransactionJob&lt;Void&gt;() {
        public Void handle(WriteSession wsession) throws UnsupportedEncodingException {
            wsession.pathBy("/query/1").property("greeting", "태극기가 바람에 펄럭입니다.")
                .property("since", 20);
            wsession.pathBy("/query/2").property("greeting", "태극기가 바람에 펄럭입니다.") ;
            return null;
        }
    }) ;
    
    session.pathBy("/query").<em>childQuery("greeting:바람")
    	.between("since", 10, 30)
        .ascending("since")</em>.find().debugPrint() ;
}</pre>		

			<h2 class="sheader">Output</h2>
			<pre>ReadNodeImpl[fqn=/query/1]</pre>
          </section>
        </div>


		<div class="slide styling" id="gs-example5">
          <style>
          	.example_source {
          		font-size : 14px ;
          	}
          </style>
          <header><span class="js">Getting Started</span> <h1>Event Notification</h1></header>
          <section>
             <pre class="example_source">public void testListener() throws Exception {
    final DebugListener listener = new DebugListener();
    <em>session.workspace().addListener(listener)</em> ;
    session.tran(new TransactionJob&lt;Void&gt;() {
        @Override
        public Void handle(WriteSession wsession) {
            wsession.root().addChild("bleujin").property("name", "bleujin");
            return null ;
        }
    }).get() ;
    <em>assertEquals(1, listener.getCount())</em> ;
}

@Listener
static public class DebugListener {
    private AtomicInteger counter = new AtomicInteger() ;
    @CacheEntryModified
    public void modified(CacheEntryModifiedEvent&lt;TreeNodeKey, AtomicHashMap&lt;PropertyId, PropertyValue&gt;&gt; e){
        if (e.isPre()) return ;
        if (e.getKey().getType() == Type.DATA && (!e.getKey().getFqn().isSystem()))  {
            <em>counter.incrementAndGet()</em> ;
        }
    }
    public int getCount(){
        return counter.get() ;
    }
}</pre>		

          </section>
        </div>




        <div class="slide transitionSlide" id="demo-markup-title">
          <section class="middle">
            <h2>Demo</h2>
            <p>&nbsp;</p>
            <img src="src/HTML5_Offline_Storage_32.png" title="Demo" alt="Demo">
          </section>
        </div>

		<div class="slide realtime-communication" id="web-sockets">
          <style>
            #websockets-message {
              text-align: center;
              padding: 0px;
            }
            #ws-left {
              float: left;
              width: 490px;
              padding-right: 10px
            }
            #ws-left h4 {
              margin: 10px 0 0 0;
            }
            #ws-right {
              float: left;
              width: 300px;
              border-left: solid 1px #9a9ab3;
              padding-left: 20px;
            }
            #wsConsoleLog {
              background-color: white;
              border: solid 1px #999;
              border-top-color: #ccc;
              border-left-color: #ccc;
              padding: 5px;
              width: 290px;
              height: 430px;
              overflow-y: auto;
            }
            #wsConsoleLog p:first-of-type {
              margin: 0 0;
            }
            #wsConsoleLog p {
              margin: 0.5em 0;
              font-size: 12px;
            }
            #ws-left input[type='text'] {
              width: 370px;
            }
            #ws-left textarea {
              width: 470px;
              height: 325px;
              font-size: 13px;
            }
            #ws-left button,
            #ws-right button {
              margin-top: 5px;
              font-size: 14px;
            }
            #ws-config-config, #ws-config-message {
              margin-top: 15px;
            }
            #ws-right button {
              font-size: 14px;
              margin-top: 3px;
            }
            #ws-powered {
              text-align: center;
              padding-top: 15px;
              clear: both;
            }
            #ws-powered a {
              border: 0
            }
          </style>
          <header><span class="js">Demo</span> <h1>with websocket, script</h1></header>
          <section>
          	

            <div id="ws-left">

              <div id="ws-config-location">
                <h4>Location:</h4>
                <input type="text" id="wsUri" disabled />
                <br>
                <button id="wsConnectBut" disabled>Connect</button>
                <button id="wsDisconnectBut" disabled>Disconnect</button>
              </div>
              <div id="ws-config-message">
                <h4>Message:</h4>
                <textarea id="wsMessage" disabled >session.tranSync(function(wsession){
    wsession.pathBy("/bleujin").property("name", "bleujin") ;
    wsession.pathBy("/hero").property("name", "hero") ;
}) ;

session.root().children().eq("name", "hero").debugPrint() ;</textarea> 
                
                <button id="wsSendBut" disabled>Send</button>
              </div>
            </div>
            
            <div id="ws-right">
              <div id="ws-log">
                <strong>Output:</strong>
                <div id="wsConsoleLog"></div>
                <button id="wsClearLogBut">Clear log</button>
              </div>
            </div>
          </section>
          <script src="src/websocket/websocket.js" defer></script>

          </section>
        </div>



        <div class="slide styling" id="and-after">
        <style>
          	.sheader {
          		margin-top : 30px ;
          	}
        </style>
        <header><span class="js">Future</span> <h1>마지막으로</h1></header>
        <section>
          	 
             <h2 class="sheader">No one Size Repository Fits all</h2>
             <pre>은총알은 없고 환경은 변했다.
</pre>

             <h2 class="sheader">OpenSource를 직접 해보자 </h2>
			<pre>지루한 프로그래밍 - 기계적인 프로그래밍과 삶
직접 하지 않으면 알 수 없는 것들이 있다.
바꾸지 않으면 바뀌지 않는다.</pre>


		</section>
        </div>















        <div class="slide" id="browser-support">
          <header><h1>See it today?</h1></header>
          <section>
            <ul class="bullets">
              <li>Modern Browsers</li>
              <li>Mobile Browsers</li>
              <li>Chrome extensions/Firefox Jetpack/Safari extensions</li>
            </ul>
          </section>
        </div>



        <div class="slide" id="formula-outro-slide">
          <style>
            p.resource-link {
              font-size: 25px;
            }
            p.resource-link a {
              color: blue;
              text-decoration: underline;
              border: none;
            }
          </style>
          <section class="middle formula">
            Craken ~=
            <span class="html">DATA</span>
            +
            <span class="css">INDEX</span>
            +
            <span class="js">BLOB</span>
            <p class="resource-link">
              Thanks For Listening ! Questions ? <br/><br/>
              Slides available at 
              <a href="http://github.com/bleujin/craken">http://github.com/bleujin/craken</a>
            </p>
          </section>
        </div>

      </div> <!-- slides -->
      <div id="speaker-note" class="invisible" style="display: none;">
      </div> <!-- speaker note -->
      <aside id="help" class="sidebar invisible" style="display: hidden;">
        <table>
          <caption>Help</caption>
          <tbody>
            <tr>
              <th>Move Around</th>
              <td>&larr;&nbsp;&rarr;</td>
            </tr>
            <tr>
              <th>Source File</th>
              <td>s</td>
            </tr>
            <tr>
              <th>Change Theme</th>
              <td>t</td>
            </tr>
            <tr>
              <th>Syntax Highlight</th>
              <td>h</td>
            </tr>
            <tr>
              <th>Speaker Notes</th>
              <td>n</td>
            </tr>
            <tr>
              <th>Toggle 3D</th>
              <td>3</td>
            </tr>
            <tr>
              <th>Help</th>
              <td>0</td>
            </tr>
          </tbody>
        </table>
      </aside>
    </div> <!-- presentation -->

    <!--[if lt IE 9]>
    <script 
      src="http://ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js">
    </script>
    <script>CFInstall.check({ mode: "overlay" });</script>
    <![endif]-->

    <script src="src/prettify/prettify.js" onload="prettyPrint();" defer></script>
    <script src="js/utils.js"></script>
    <script src="http://maps.google.com/maps/api/js?sensor=true"></script>
    <script>
      // Check if new appcache is available, load it, and reload page.
      if (window.applicationCache) {
        window.applicationCache.addEventListener('updateready', function(e) {
          if (window.applicationCache.status == window.applicationCache.UPDATEREADY) {
            window.applicationCache.swapCache();
            if (confirm('A new version of this site is available. Load it?')) {
              window.location.reload();
            }
          }
        }, false);
      }
    </script>
  </body>
</html>