<!doctype html>  
<html lang="ko" manifest="cache.appcache">
	
	<head>
		<meta charset="utf-8">
		
		<title>Craken - Service Platform for (web) developers</title>

		<meta name="description" content="Craken - Distributed Repository">
		<meta name="author" content="bleujin">
		
		<link href='http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
		<link rel="stylesheet" href="css/reset.css">
		<link rel="stylesheet" href="css/main.css">

		<link rel="stylesheet" href="css/zenburn.css">
	</head>
	
	<body>
		
		<div id="reveal">
			
			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section>
					<img src="img/craken.jpg" width="50%" style="border:0">
					<h3 class="inverted" style="padding-top: 1em">Service made easy for developers</h3>
					<script>
						// Delicously hacky. Look away.
						if( navigator.userAgent.match( /(iPhone|iPad|iPod|Android)/i ) )
						document.write( '<p style="color: rgba(0,0,0,0.3); text-shadow: none;">('+'Tap to navigate'+')</p>' );
					</script>
					
					<div style="padding-top: 2em">
					bleujin<br />
					bleujin@gmail.com<br />
					@i-on.net<br />
					</div>
				</section>
				
				<section>
					<h2>Preface</h2>
				    <ul>
				      <li>Imaging</li>
				      <li>Repository Pros/Cons</li>
				      <li>Craken Feature</li>
				      <li>Getting Started</li>
				    </ul>
				</section>

				<section>
					<section>
						<h2>Imaging</h2>

						<a><img src="img/case1.jpg" style="border: 0"></a>
					</section>
					<section>
						<h2>Imaging</h2>

						<img src="img/case2.jpg">
					</section>
					<section>
						<h2>Imaging</h2>
						
						<img src="img/case3.jpg">
					</section>
					<section>
						<h2>Imaging</h2>

						<img src="img/case4.jpg">
					</section>
				</section>


				<section>
					<section>
						<h2>at First</h2>
						
						<img src="img/slide1.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide2.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide3.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide4.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide5.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide6.jpg" width="75%" height="75%"/>
					</section>
					
					<section>
						<h2></h2>
						
						<img src="img/slide7.jpg" width="75%" height="75%"/>
					</section>
					


				</section>


				<section>
					<section>
						<h2>Craken Feature</h2>
						<ul>
							<li>Embedable</li>
							<li>InMemory Data Grid</li>
							<li>Schema-free(Tree Document Model)</li>
							<li>scalable / distributed</li>
							<li>replication</li>
							<li>eventually consistency(not ACID)</li>
							<li>Adaptable</li>
						</ul>
					</section>

					<section>
						<h2>Architecture</h2>
						
						<img src="img/craken_arch.jpg" width="70%">
					</section>


					<section>
						<h2>Distribute</h2>
						
						<pre>

Create Repository
	repository = RepositoryImpl.create(GlobalConfigurationBuilder
	    .defaultClusteredBuilder().transport().clusterName("mysearch")
		.addProperty("configurationFile", PathMaker.getFilePath(getIXSSDocBase(), "WEB-INF/jgroups-udp.xml")).build());
		
		repository.defineWorkspace("wname", CentralCacheStoreConfig.create().location("./resource/store")) ;
		
		repository.start() ;
		
		ReadSession session = repository.login("wname") ;
		session.tran(new TransactionJob&lt;Void&gt;(){
			public Void handle(WriteSession wsession){
				wsession.pathBy("/peoples/bleujin").property("name", "bleujin") ;
				return null ;
			}
		}).get() ;
		
		assertEquals("bleujin", session.pathBy("/peoples/bleujin").property("name").stringValue()) ;

						</pre>
					</section>
					
					
					
					<section>
					  <h2>Craken Can do</h2>
					  <ul>
					    <li>Fast Distribute Repository</li>
					    <li>Fast Distribute Search/Index Service</li>
					    <li>Data Analytics Based Map/Reduce(expect)</li>
					  </ul>
					</section>

				</section>

				<section>
					<section>
					  <h2>Getting Started</h2>
					  <pre>
		GlobalConfiguration globalConf = GlobalConfigurationBuilder.defaultClusteredBuilder().transport().....;
		Configuration defaultConf = new ConfigurationBuilder().clustering().cacheMode(CacheMode.DIST_SYNC).clustering() .... ;
		
		Repository r = RepositoryImpl.create(globalConf) ;
		repo.defineConfig("mywork.node", defaultConf) ;
		r.start() ;
		
		ReadSession session = r.login("mywork") ;
		session.tranSync(new TransactionJob<Void>() {
		    @Override
		    public Void handle(WriteSession wsession) {
		        wsession.pathBy("/bleujin").property("name", "bleujin").property("age", 20).refTo("friend", "/hero").addChild("address").property("city", "seoul") ;
		        wsession.pathBy("/hero").property("name", "hero").property("age", 30L) ;
		        return null;
		    }
		});

		Rows rows = session.root().children().eq("name", "bleujin").lte("age", 30).skip(0).offset(10).ascending("age").toRows("name", "bleujin", "address/city", "friend@name") ;
		rows.debugPring() ;
	
		r.stop() ;
					  </pre>
					</section>
					
					<section>
						<h2>Adaptable(Traditional)</h2>
						<pre>
		DBController dc = new DBController(new OracleDBManager()) ;
		dc.createUserProcedure("dummy@addPersonWITH(?,?,?)")	
			.addParam("bleujin")
			.addParam(20)
			.addParam("seoul").execUpdate() ;
		
		Rows rows = dc.createUserProcedure("dummy@findPersonBy(?)")
			.addParam("hero").execQuery() ;
			
		assertEquals("hero", rows.firstRow().getString("name")) ;
		assertEquals(20, rows.firstRow().getInt("age")) ;
						</pre>
					</section>

					<section>
						<h2>In Craken</h2>
						<pre>
		CrakenManager dbm = new CrakenManager(this.r) ;
		
		dbm.register("dummy", new QueryPackage(){
		    @Function("addPersonWith")
		    public int addPerson(final String name, final int age, final String address) throws InterruptedException, ExecutionException{
		        return session().tranSync(new TransactionJob<Integer>() {
		            public Integer handle(WriteSession wsession) {
		                wsession.pathBy("/persons/" + name).property("name", name).property("age", age).property("address", address) ;
		                return 1 ;
		            }
		        }) ;
		    }
		    public Rows findPersonBy(String name){
		        return session().pathBy("/persons", true).child(name).toRows("name", "age");
		    }
		}) ;
			
		DBController dc = new DBController(dbm) ;
		dc.createUserProcedure("dummy@addPersonWITH(?,?,?)").addParam("bleujin").addParam(20).addParam("seoul").execUpdate() ;
		dc.createUserProcedure("dummy@addPersonWITH(?,?,?)").addParam("hero").addParam(20).addParam("busan").execUpdate() ;
		
		Rows rows = dc.createUserProcedure("dummy@findPersonBy(?)").addParam("hero").execQuery() ;
		assertEquals("hero", rows.firstRow().getString("name")) ;
		assertEquals(20, rows.firstRow().getInt("age")) ;

						</pre>
					</section>

					
					<section>
						<h2>Domain Object</h2>
					
					<pre>
					
	public class Dept implements Serializable {
	    private static final long serialVersionUID = 8529181055812294059L;
	    private int deptno;
	    private String name;
	    private Employee manager;
	    private List<Employee> emps;
	    private Address address;
	    .......				
					


        session.tran(new TransactionJob<Void>() {
            @Override
            public Void handle(WriteSession wsession) {
                wsession.root().addChild("/dev").property("name", "dev").property("deptno", 20)
                    .addChild("manager").property("name", "bleujin").property("created", new Date()).parent()
                    .refTos("emps", "/emps/jin")
                    .refTos("emps", "/emps/hero") ;
                
                wsession.root().addChild("/emps/jin").property("name", "jin") ;
                wsession.root().addChild("/emps/hero").property("name", "hero") ;
                
                return null ;
            }
        }).get() ;
        
        ReadNode dev = session.pathBy("/dev");

        final Dept devBean = dev.toBean(Dept.class); // devBean is proxy
        assertEquals("dev", devBean.name().toString()) ;
        assertEquals(20, devBean.deptNo()) ;
        
        assertEquals("bleujin", devBean.manager().name()) ;
        Debug.line(devBean.emps()) ;
        assertEquals(2, devBean.emps().size()) ;
        </pre>
					</section>

					
				</section>


		  <section>
		      <h2>Project</h2>
		    <ul>
		      <li>Craken : <a href="https://github.com/bleujin/craken">https://github.com/bleujin/craken</a></li>

		      <li>Server : <a href="https://github.com/bleujin/aradon">https://github.com/bleujin/aradon</a></li> 
		      <li>Client : <a href="https://github.com/bleujin/aradonClient">https://github.com/bleujin/aradonClient</a></li>
		      <li>Extend : <a href="https://github.com/bleujin/aradonExtend">https://github.com/bleujin/aradonExtend</a></li>
		      <li>ionfw :  <a href="https://github.com/bleujin/ionframework">https://github.com/bleujin/ionframework</a></li>
		      <li>isearcher :  <a href="https://github.com/bleujin/ionframework">https://github.com/bleujin/isearcher</a></li>
		    </ul>
		  </section>


		  <section>
		      <h2>Thanks for listening!</h2>
		      <h3>Questions?</h3>
		
		     <div  style="padding-top: 1em">
		     Slides available at<br />
		     <b><a href="http://www.github.com/bleujin/craken" style="font-size: bigger">http://www.github.com/bleujin/craken</a></b>
		     </div>
		     
		     <h5 style="padding-top: 2em">bleujin@gmail.com</h5>
		     <h5>@i-on.net</h5>
		  </section>
		
		  <section>
		      <h2>Documentation &amp; Credits</h2>
		      
		      <ul>
		        <li><a href="http://www.github.com/bleujin/craken">craken</a></li>
		      	<li style="padding-top: 1em">Presentation done with <a href="https://github.com/hakimel/reveal.js">reveal.js</a></li>
		      	<li>Cool zooming done with <a href="https://github.com/hakimel/zoom.js">zoom.js</a></li>
		      </ul>
		      
		  </section>

			</div>

			<!-- The navigational controls UI -->
			<aside class="controls">
				<a class="left" href="#">&#x25C4;</a>
				<a class="right" href="#">&#x25BA;</a>
				<a class="up" href="#">&#x25B2;</a>
				<a class="down" href="#">&#x25BC;</a>
			</aside>

			<!-- Displays presentation progress, max value changes via JS to reflect # of slides -->
			<div class="progress"><span></span></div>
			
		</div>
		
		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
		<script src="js/reveal.js"></script>
		<script src="js/highlight.js"></script>
		<script src="js/zoom.js"></script>
		<script>
		$(document).ready(function() {
			$('pre').click(function(event) {
				event.preventDefault();
				zoom.in( { element: event.target } );
//				updateProgress()
			})
			$('img').click(function(event) {
				event.preventDefault();
				zoom.in( { element: event.target } );
//				updateProgress();
			})
//			$(document).keypress(updateProgress)
		})
		function updateProgress() {
			var slides = $("#reveal .slides > section")
			var currentSlide = $("#reveal .slides .present")
			var currentPosition = $(slides).index(currentSlide)
			// dom.progressbar.style.width = ( indexh / ( document.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ).length - 1 ) ) * window.innerWidth + 'px';
			console.log(" GOT " + slides.length + " pos " + currentPosition + " and innerWidth " + window.innerWidth);
			$(".progress span").css("width", (currentPosition / (slides.length - 1) * window.innerWidth) + 'px' )
		}
		</script>
		<script>
			// Parse the query string into a key/value object
			var query = {};
			location.search.replace( /[A-Z0-9]+?=(\w*)/gi, function(a) {
				query[ a.split( '=' ).shift() ] = a.split( '=' ).pop();
			} );

			Reveal.initialize({
				// Display controls in the bottom right corner
				controls: true,

				// Display a presentation progress bar
				progress: false,

				// If true; each slide will be pushed to the browser history
				history: true,

				// Flags if mouse wheel navigation should be enabled
				mouseWheel: true,

				// Apply a 3D roll to links on hover
				rollingLinks: true,

				// UI style
				theme: query.theme || 'default', // default/neon

				// Transition style
				transition: query.transition || 'default' // default/cube/page/concave/linear(2d)
			});

			hljs.initHighlightingOnLoad();
		</script>

	</body>
</html>
